#!/usr/bin/env ruby
# coding: utf-8

require 'highline/import'
require 'trollop'
require 'yaml'

# load library
file = File.symlink?(__FILE__) ? File.readlink(__FILE__) : __FILE__
lib = File.join File.dirname(file), "/../lib/beeminder"

if File.exists? lib
  # using local version
  require lib
else
  require 'beeminder'
end

usage = "usage: beemind goal value [comment]"
opts = Trollop::options do
  banner usage

  opt :config,    "Path to config.", :type => :string, :default => "~/.beeminderrc"
  opt :list,      "List all available goals."
  opt :user,      "Beeminder account. (Optional. If not given, reads config or asks for it.)", :type => :string
  opt :token,     "Auth token. (Optional. If not given, reads config or asks for it.)",        :type => :string
end

Trollop::die usage if not (2..3).include?(ARGV.size) and not opts[:list]
goal, value, comment = ARGV unless opts[:list]

opts[:config] = File.expand_path opts[:config]
opts[:no_config] = true if opts[:user] or opts[:token]

if File.exists? opts[:config]
  # read config to fill in the gaps
  auth = YAML.load File.open(opts[:config]) || {}
  opts[:user]  ||= auth["user"]
  opts[:token] ||= auth["token"]
end

# ask for missing data
if opts[:user].nil? or opts[:token].nil?
  opts[:user]  ||= ask("Beeminder account:")
  opts[:token] ||= ask("Auth token:")

  auth = {
    "user"  => opts[:user],
    "token" => opts[:token]
  }
  File.open(opts[:config], "w+") {|f| YAML.dump auth, f}
  File.chmod 0600, opts[:config]
  puts "Written config to '#{opts[:config]}.'"
end

# login
bee = Beeminder::User.new opts[:user], opts[:token]

if opts[:list]
  # list all available goals
  puts "available goals:"
  goals = bee.goals.sort_by{|g| g.slug}.each do |goal|
    puts "  #{goal.slug} (#{goal.title})"
  end
else
  bee.send goal, value, comment || ""
end
